@model SEPQuestionAnswer.Models.Question
@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
<section class="content">
    <div class="container-fluid">
        <div class="row clearfix">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="card">
                    <div class="header">
                        <h2>Tạo Câu Hỏi</h2>
                        <ul class="header-dropdown m-r--5">
                            <li class="dropdown">
                                <a href="javascript:void(0);" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                                    <i class="material-icons">more_vert</i>
                                </a>
                                <ul class="dropdown-menu pull-right">
                                    <li><a href="javascript:void(0);" class=" waves-effect waves-block">Action</a></li>
                                    <li><a href="javascript:void(0);" class=" waves-effect waves-block">Another action</a></li>
                                    <li><a href="javascript:void(0);" class=" waves-effect waves-block">Something else here</a></li>
                                </ul>
                            </li>
                        </ul>
                    </div>
                    <div class="body">
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group form-float">
                                <div class="form-line">
                                    @Html.EditorFor(model => model.Questioner, new { htmlAttributes = new { @class = "form-control", @Value = User.Identity.Name, disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.Questioner, "", new { @class = "text-danger" })
                                    <label class="form-label">Người Hỏi</label>
                                </div>
                            </div>
                            <div class="form-group form-float">
                                <div class="form-line">
                                    @Html.EditorFor(model => model.Respondent, new { htmlAttributes = new { @class = "form-control", @Value = User.Identity.Name, disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.Respondent, "", new { @class = "text-danger" })
                                    <label class="form-label">Người Trả Lời</label>
                                </div>
                            </div>
                            <div class="form-group form-float">
                                @Html.DropDownListFor(model => model.Category_ID, null, "-- Chọn Danh Mục --", htmlAttributes: new { @class = "dropdown bootstrap-select form-control bs3" })
                                @Html.ValidationMessageFor(model => model.Category_ID, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group form-float">
                                <div class="form-line">
                                    @Html.EditorFor(model => model.AskQuestion, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.AskQuestion, "", new { @class = "text-danger" })
                                    <label class="form-label">Câu Hỏi</label>
                                </div>
                            </div>
                            <div class="form-group form-float">
                                <label class="form-label" style="color:#AAA; font-weight:100">Câu Trả Lời</label>
                                <div class="form-line">
                                    @Html.TextAreaFor(model => model.Answer, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Answer, "", new { @class = "text-danger" })
                                    <label class="form-label">Câu Trả Lời</label>
                                </div>
                            </div>
                            <div class="demo-radio-button">
                                <label class="form-label" style="color:#AAA; font-weight:100">Tình Trạng</label>
                                @Html.RadioButton("Status", "Accept", htmlAttributes: new { @class = "radio-col-light-green", @checked = "", @id = "Accept" })
                                <label for="Accept" class="m-l-20">Accept</label>
                                @Html.RadioButton("Status", "Pending", htmlAttributes: new { @class = "radio-col-red", @id = "Pending" })
                                <label for="Pending" class="m-l-20">Pending</label>
                                @Html.RadioButton("Status", "Reject", htmlAttributes: new { @class = "radio-col-grey", @id = "Reject" })
                                <label for="Reject" class="m-l-20">Reject</label>
                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group form-float">
                                <div class="form-line" style="margin-top:20px">
                                    @Html.EditorFor(model => model.CountView, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @Value = "0" } })
                                    @Html.ValidationMessageFor(model => model.CountView, "", new { @class = "text-danger" })
                                    <label class="form-label">Lượt Xem</label>
                                </div>
                            </div>
                            <input type="submit" value="Tạo" class="btn btn-primary waves-effect" />
                            <a href=@Url.Action("Index","Questions") class="btn btn-primary waves-effect">Hủy</a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://cdn.tiny.cloud/1/no-api-key/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>

    <script>
        tinymce.init({
            selector: 'textarea#Answer',
            menubar: false,
            forced_root_block: "",
        });
    </script>
}
