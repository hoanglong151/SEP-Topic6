@model SEPQuestionAnswer.Models.Question

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
<section class="content">
    <div class="container-fluid">
        <div class="row clearfix">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="card">
                    <div class="header">
                        <h2>Cập Nhật Câu Hỏi</h2>
                    </div>
                    <div class="body">
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.ID)
                            <div class="form-group form-float">
                                <div class="form-line">
                                    @Html.EditorFor(model => model.Questioner, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Questioner, "", new { @class = "text-danger" })
                                    <label class="form-label">Người Hỏi</label>
                                </div>
                            </div>
                            <div class="form-group form-float">
                                <div class="form-line">
                                    @Html.EditorFor(model => model.Respondent, new { htmlAttributes = new { @class = "form-control", @Value = User.Identity.Name, disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.Respondent, "", new { @class = "text-danger" })
                                    <label class="form-label">Người Trả Lời</label>
                                </div>
                            </div>
                            <div class="form-group form-float">
                                @Html.DropDownListFor(model => model.Category_ID, null, "-- Chọn Danh Mục --", htmlAttributes: new { @class = "dropdown bootstrap-select form-control bs3", @required = true })
                                @Html.ValidationMessageFor(model => model.Category_ID, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group form-float">
                                <div class="form-line">
                                    @Html.EditorFor(model => model.AskQuestion, new { htmlAttributes = new { @class = "form-control", @minLength = "1", @required = true } })
                                    @Html.ValidationMessageFor(model => model.AskQuestion, "", new { @class = "text-danger" })
                                    <label class="form-label">Câu Hỏi</label>
                                </div>
                            </div>
                            <div class="form-group form-float">
                                <label class="form-label" style="color:#AAA; font-weight:100">Câu Trả Lời</label>
                                <div class="form-line">
                                    @Html.TextAreaFor(model => model.Answer, new { htmlAttributes = new { @class = "form-control", @minLength = "1", @required = true } })
                                    @Html.ValidationMessageFor(model => model.Answer, "", new { @class = "text-danger" })
                                    <label class="form-label">Câu Trả Lời</label>
                                </div>
                            </div>
                            <div class="demo-radio-button">
                                <label class="form-label" style="color:#AAA; font-weight:100">Tình Trạng</label>
                                @Html.RadioButton("Status", "Accept", htmlAttributes: new { @class = "radio-col-light-green", @checked = "", @id = "Accept" })
                                <label for="Accept" class="m-l-20">Accept</label>
                                @Html.RadioButton("Status", "Pending", htmlAttributes: new { @class = "radio-col-red", @id = "Pending" })
                                <label for="Pending" class="m-l-20">Pending</label>
                                @Html.RadioButton("Status", "Disable", htmlAttributes: new { @class = "radio-col-grey", @id = "Disable" })
                                <label for="Disable" class="m-l-20">Disable</label>
                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group form-float">
                                <div class="form-line" style="margin-top:20px">
                                    @Html.EditorFor(model => model.CountView, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.CountView, "", new { @class = "text-danger" })
                                    <label class="form-label">Lượt Xem</label>
                                </div>
                            </div>
                            <input type="submit" value="Cập nhật" class="btn btn-primary waves-effect" />
                            <a id="cancel" href=@Url.Action("Index","Questions") class="btn btn-primary waves-effect">Hủy</a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://cdn.tiny.cloud/1/no-api-key/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>
    <script src="https://cdn.tiny.cloud/1/xi2o2589v6xhr0ors87yescdan1a4owcfdzrchvppxx5yik9/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>
    <script>
        tinymce.init({
            selector: 'textarea#Answer',
            menubar: false,
            forced_root_block: "",
            entity_encoding: "raw",
            style_formats: [
                {
                    title: "Headers", items: [
                        { title: "Header 1", format: "h1" },
                        { title: "Header 2", format: "h2" },
                        { title: "Header 3", format: "h3" },
                        { title: "Header 4", format: "h4" },
                        { title: "Header 5", format: "h5" },
                        { title: "Header 6", format: "h6" }
                    ]
                },
                {
                    title: "Inline", items: [
                        { title: "Bold", icon: "bold", format: "bold" },
                        { title: "Italic", icon: "italic", format: "italic" },
                        { title: "Underline", icon: "underline", format: "underline" },
                        { title: "Strikethrough", icon: "strikethrough", format: "strikethrough" },
                        { title: "Superscript", icon: "superscript", format: "superscript" },
                        { title: "Subscript", icon: "subscript", format: "subscript" },
                        { title: "Code", icon: "code", format: "code" }
                    ]
                },
                {
                    title: "Blocks", items: [
                        { title: "Paragraph", format: "p" },
                        { title: "Blockquote", format: "blockquote" },
                        { title: "Div", format: "div" },
                        { title: "Pre", format: "pre" }
                    ]
                },
                {
                    title: "Alignment", items: [
                        { title: "Left", icon: "alignleft", format: "alignleft" },
                        { title: "Center", icon: "aligncenter", format: "aligncenter" },
                        { title: "Right", icon: "alignright", format: "alignright" },
                        { title: "Justify", icon: "alignjustify", format: "alignjustify" }
                    ]
                }
            ],
        });
    </script>
    <script>
        document.querySelector('#item-2').setAttribute('class', 'active');
    </script>
    <script>
        var cancel = document.querySelector('#cancel');
        var cate = document.querySelector('#Category_ID').value;
        var question = document.querySelector('#AskQuestion').value;
        var radioA = document.querySelector('#Accept').checked;
        var radioP = document.querySelector('#Pending').checked;
        var radioD = document.querySelector('#Disable').checked;
        var answer = document.querySelector('#Answer').value;
        cancel.addEventListener("click", function (e) {
            var cate1 = document.querySelector('#Category_ID').value;
            var question1 = document.querySelector('#AskQuestion').value;
            var radioA1 = document.querySelector('#Accept').checked;
            var radioP1 = document.querySelector('#Pending').checked;
            var radioD1 = document.querySelector('#Disable').checked;
            if (question != question1 || cate != cate1 || radioA !== radioA1 || radioP != radioP1 || radioD != radioD1 || answer != tinyMCE.get('Answer').getContent()) {
                var check = window.confirm('Bạn Có Muốn Rời Khỏi Form?');
                if (check == false) {
                    e.preventDefault();
                }
            }
        })
    </script>
}
