@model SEPQuestionAnswer.Models.Category

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<section class="content">
    <div class="container-fluid">
        <div class="row clearfix">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="card">
                    <div class="header">
                        <h2>Cập Nhật Chủ Đề</h2>
                    </div>
                    <div class="body">
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.ID)
                            <div class="form-group form-float">
                                <div>
                                    @Html.HiddenFor(model => model.Status)
                                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group form-float">
                                <div class="form-line">
                                    @Html.EditorFor(model => model.CategoryName, new { htmlAttributes = new { @class = "form-control", @id = "text", @autocomplete = "off", @minLength = "1", @required = true } })
                                    @Html.ValidationMessageFor(model => model.CategoryName, "", new { @class = "text-danger" })
                                    <label class="form-label">Tên Chủ Đề</label>
                                </div>
                            </div>
                            <div class="form-group form-float hidden">
                                <div class="form-line">
                                    @Html.EditorFor(model => model.CountQuestion, new { htmlAttributes = new { @class = "form-control", @id = "text", @autocomplete = "off", @minLength = "1", @required = true } })
                                    @Html.ValidationMessageFor(model => model.CountQuestion, "", new { @class = "text-danger" })
                                    <label class="form-label">Số Lượng Câu Hỏi</label>
                                </div>
                            </div>
                            <input id="submit1" type="submit" value="Cập nhật" class="btn btn-primary waves-effect" disabled />
                            <a id="cancel" href=@Url.Action("Index","Categories") class="btn btn-primary waves-effect">Hủy</a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script type="text/javascript">
    const submit = document.getElementById('submit1');
    const text = document.getElementById('text').value;
    const check = document.getElementById('text');
    check.addEventListener("input", function (e) {
        if (e.currentTarget.value === text.toLowerCase() || e.currentTarget.value === text) {
            console.log(e.currentTarget.value);
            submit.disabled = true;
        } else {
            console.log(e.currentTarget.value);
            submit.disabled = false;
        }
    });
</script>
<script>
    document.querySelector('#item-1').setAttribute('class', 'active');
</script>
<script>
    var input = document.querySelector('#text').value;
    var cancel = document.querySelector('#cancel');
    cancel.addEventListener("click", function (e) {
        var inputA = document.querySelector('#text').value;
        if (inputA != input) {
            var check = window.confirm('Bạn Có Muốn Rời Khỏi Form?');
            if (check == false) {
                e.preventDefault();
            }
        }
    })
</script>



